{"version":3,"sources":["modules/news/services/NewsService.js","modules/news/components/tabbedComponent/tabList/TabList.js","modules/news/components/tabbedComponent/tab/Tab.js","modules/news/components/tabbedComponent/tabContent/TabContent.js","modules/news/components/tabbedComponent/TabbedComponent.js","modules/news/components/article/Article.js","modules/news/components/loader/Loader.js","modules/news/mappers/mapNews.js","modules/news/NewsModule.js","App.js","serviceWorker.js","index.js"],"names":["NewsService","apiKey","Object","classCallCheck","this","url","address","country","theme","concat","urlBuilder","request","Request","fetch","then","response","json","TabList","react_default","a","createElement","className","props","children","Component","Tab","active","onClick","TabContent","TabbedComponent","_this","possibleConstructorReturn","getPrototypeOf","call","tabNames","tabs","setState","activeTab","onTabChange","index","state","_this2","_loop","i","push","tabbedComponent_tab_Tab","key","isTabActive","onTabChoose","length","tabbedComponent_tabList_TabList","tabbedComponent_tabContent_TabContent","content","renderTabList","renderTabContent","Article","_this$props$content","href","image","title","description","src","alt","Loader","mapNews","datum","urlToImage","topics","NewsModule","newsService","process","fetchNews","clearContent","tabContent","topic","isLoading","setContent","articles","data","forEach","articleContent","components_article_Article","components_tabbedComponent_TabbedComponent","changeTopic","components_loader_Loader","App","modules_news_NewsModule","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a25cb2c.chunk.js","sourcesContent":["export default class NewsService {\r\n  constructor(apiKey) {\r\n    this.url = {\r\n      address: 'https://newsapi.org/v2/top-headlines',\r\n      country: 'us',\r\n      apiKey\r\n    };\r\n  }\r\n\r\n  urlBuilder(theme) {\r\n    const url = `${this.url.address}?country=${this.url.country}&category=${theme}&apiKey=${this.url.apiKey}`;\r\n    return url;\r\n  }\r\n\r\n  fetchNews(theme) {\r\n    const url = this.urlBuilder(theme);\r\n    const request = new Request(url);\r\n    return fetch(request).then((response) => {\r\n      return response.json();\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './TabList.css';\r\n\r\nclass TabList extends Component {\r\n  render() {\r\n    return (\r\n      <div className='tab-list'>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Tab.css';\r\n\r\nclass Tab extends Component {\r\n  render() {\r\n    return (\r\n      <button className={this.props.active ? 'active' : ''} onClick={this.props.onClick}>\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;","import React, { Component } from 'react';\r\n\r\nimport './TabContent.css';\r\n\r\nclass TabContent extends Component {\r\n  render() {\r\n    return (\r\n      <div className='tab-content'>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabContent;","import React, { Component } from 'react';\r\n\r\nimport TabList from './tabList/TabList.js';\r\nimport Tab from './tab/Tab.js';\r\nimport TabContent from './tabContent/TabContent.js';\r\n\r\nimport './TabbedComponent.css';\r\n\r\nclass TabbedComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tabNames = this.props.tabs;\r\n  }\r\n\r\n  componentWillMount() {\r\n    const activeTab = 0;\r\n    this.setState({activeTab});\r\n    this.props.onTabChange(this.tabNames[activeTab]);\r\n  }\r\n\r\n  onTabChoose(index) {\r\n    this.setState({ activeTab: index});\r\n    this.props.onTabChange(this.tabNames[index]);\r\n  }\r\n\r\n  isTabActive(index) {\r\n    return index === this.state.activeTab;\r\n  }\r\n\r\n  renderTabList() {\r\n    let tabs = [];\r\n    for (let i = 0; i < this.tabNames.length; i++) {\r\n      tabs.push(\r\n        <Tab key={`tab-${i}`} active={this.isTabActive(i)} onClick={() => this.onTabChoose(i)}>\r\n          {this.tabNames[i]}\r\n        </Tab>\r\n      );\r\n    }\r\n    return (\r\n      <TabList>\r\n        {tabs}\r\n      </TabList>\r\n    );\r\n  }\r\n\r\n  renderTabContent() {\r\n    return (\r\n      <TabContent>\r\n        {this.props.content || this.props.children}\r\n      </TabContent>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='tabbed-component'>\r\n        {this.renderTabList()}\r\n        {this.renderTabContent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabbedComponent;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Article.css';\r\n\r\nclass Article extends Component {\r\n  render() {\r\n    const {\r\n      href,\r\n      image,\r\n      title,\r\n      description\r\n    } = this.props.content;\r\n    return (\r\n      <article>\r\n        <a href={href}>\r\n          <div className='content'>\r\n            <h2 className='title'>{title}</h2>\r\n            <p className='description'>{description}</p>\r\n          </div>\r\n        </a>\r\n        <img src={image} alt='article background'></img>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Article;","import React, { Component } from 'react';\r\n\r\nimport './Loader.css';\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div className='loader'>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;","const mapNews = (datum) => {\r\n  return {\r\n    href: datum.url ,\r\n    image: datum.urlToImage || './default.jpg',\r\n    title: datum.title,\r\n    description : datum.description\r\n  }\r\n};\r\n\r\nexport default mapNews;","import React, { Component } from 'react';\r\n\r\nimport NewsService from './services/NewsService'\r\n\r\nimport TabbedComponent from './components/tabbedComponent/TabbedComponent'\r\nimport Article from './components/article/Article';\r\nimport Loader from './components/loader/Loader';\r\n\r\nimport mapNews from './mappers/mapNews'\r\n\r\nimport './NewsModule.css';\r\n\r\nconst topics = [\r\n  'Technology', \r\n  'Business',\r\n  'Health',\r\n  'Entertainment',\r\n];\r\n\r\nclass NewsModule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newsService = new NewsService(process.env.REACT_APP_NEWS_API_KEY);\r\n    this.newsService.fetchNews('science');\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.clearContent();\r\n  }\r\n\r\n  clearContent() {\r\n    this.setState({\r\n      tabContent: ''\r\n    });\r\n  }\r\n\r\n  async changeTopic(topic) {\r\n    this.clearContent();\r\n    this.isLoading = true;\r\n    const response = await this.newsService.fetchNews(topic);\r\n    this.isLoading = false;\r\n    this.setContent(response.articles);\r\n  }\r\n\r\n  setContent(data) {\r\n    let articles = [];\r\n    data.forEach((datum, index) => {\r\n      const articleContent = mapNews(datum);\r\n      articles.push((\r\n        <Article key={index} content={articleContent}></Article>\r\n      ));\r\n    });\r\n    this.setState({\r\n      tabContent: articles\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='news-module'>\r\n        <TabbedComponent tabs={topics} content={this.state.tabContent} onTabChange={topic => this.changeTopic(topic)}>\r\n          {this.isLoading && <Loader />}\r\n        </TabbedComponent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsModule;\r\n","import React, { Component } from 'react';\r\n\r\nimport NewsModule from './modules/news/NewsModule';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <main className='app'>\r\n          <NewsModule>\r\n          </NewsModule>\r\n        </main>\r\n        <footer>\r\n          <div className='attribution'>\r\n            <p>Sorry, lads, but we are</p>\r\n            <a href='https://newsapi.org'>Powered by News API</a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // 'Content is cached for offline use.' message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}